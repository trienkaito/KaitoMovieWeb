@using MVC.Menu
@using MoviesWebsite.Data
@using MoviesWebsite.Models.Movie
@model IEnumerable<MoviesWebsite.Models.Movie.Movie>
@using MoviesWebsite.Areas.Admin.Models
@inject AdminSidebarService _AdminSidebarService
@{
    ViewData["Title"] = "Manage Movies";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


<!-- DataTales Example -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <div class="d-flex">
            <div class="" style="flex: 1">
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addMovie">
                    Add Movie
                </button>
            </div>

            <form asp-action="Index" method="get">
                <div class="input-group ml-3" style="flex: 1">
                    <input type="text" name="searchString" class="form-control bg-light border-0 small"
                        placeholder="Search for..." value="@ViewData["searchString"]" aria-label="Search"
                        aria-describedby="basic-addon2" />
                    <div class="input-group-append">
                        <button class="btn btn-primary" type="submit">
                            <i class="fas fa-search fa-sm"></i>
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="card-body">

        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Film</th>
                        <th>Category</th>
                        <th>Slug</th>
                        <th>Director</th>
                        <th>Type</th>
                        <th>Ep</th>
                        <th>Views</th>
                        <th>Rate</th>
                        <th>Total Rate</th>
                        <th>Comments</th>
                        <th>Action</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td style="
                                cursor: pointer;
                                display: flex;
                                justify-content: center;">
                                <a href="@Url.Action("Details", "Movie", new { id = item.MovieId })">
                                    <div data-bs-toggle="tooltip" data-bs-placement="top" title="@item.Title">
                                        @* @if (!string.IsNullOrEmpty(item.Image))
                                    {
                                    <img src="@Html.DisplayFor(modelItem => item.Image)" width="100px" height="120px" />
                                    }
                                    else
                                    {
                                    <img src="/contents/nophoto.png" width="100px" height="120px" alt="..." />
                                    } *@

                                        <img src="@Html.DisplayFor(modelItem => item.Image)" width="100px" height="120px" />

                                        @* <p>@Html.DisplayFor(modelItem => item.Title)</p> *@
                                    </div>
                                </a>
                            </td>


                            <td>
                                @foreach (var cate in item.Categories)
                                {
                                    <span>@cate.Title</span>
                                    <br />
                                }
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.Slug)</td>
                            <td>
                                @foreach (var actor in item.Actors)
                                {
                                    @if (actor.Role.Equals("Director"))
                                    {
                                        <span>@actor.Name</span>
                                    }

                                }
                            <td>
                                    @if (!item.Series)
                                    {
                                    <span>Phim lẻ</span>
                                    }
                                    else
                                    {
                                    <span>Phim bộ</span>
                                    }
                            </td>
                                @* count total ep *@
                            <td>
                                    @item.Episodes?.Count
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.View)</td>
                            <td>@Html.DisplayFor(modelItem => item.Rate)</td>
                            <td>@item.Evaluates?.Count</td>
                            <td>@item.Comments?.Count</td>
                            <td class="text-center">

                                <a id="@item.MovieId" class="btn text-warning" onclick="editItem(@item.MovieId)">
                                    <i class="fas fa-edit"></i>
                                </a>

                                <a id="@item.MovieId" class="btn text-danger" onclick="deleteItem(@item.MovieId)">
                                    <i class="fas fa-trash"></i>
                                </a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
            <!-- //paging -->
            <div class="float-right">
                <partial name="_PagingXTL" model="@ViewBag.pagingmodel" />
            </div>

        </div>
    </div>
</div>

<!-- Add Movie Modal-->
@await Html.PartialAsync("_AddMovie", new MovieCreate())
<!-- Edit Modal-->
<div id="edit"></div>

<!-- delete -->
<div id="delete"> </div>

@section Scripts {

    <script>
        // $(document).ready(function () {
        //     $('#addMovie').on('shown.bs.modal', function () {
        //         $('.js-select2').select2({
        //             width: '100%'
        //         });
        //     });
        // });

        $(document).ready(function () {
            // Initialize select2 for both addMovie and editMovie modals
            $('#addMovie, #editMovie').on('shown.bs.modal', function () {
                $(this).find('.js-select2').select2({
                    width: '100%'
                });
            });
        });

        function editItem(id) {
            console.log("id", id)
            $.ajax({
                url: '@Url.ActionLink("EditPartialView", "Movie")/' + id,
                type: 'GET',
                success: function (response) {
                    $('#edit').html(response)
                    $("#editMovie").modal("show");
                },
                error: function (error) {
                    console.log("error")
                }
            });
        };

        // when click on delete use swal to confirm
        function deleteItem(id) {
            swal({
                title: "Are you sure?",
                text: "Once deleted you will not be able to recover this data!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            }).then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        url: '@Url.ActionLink("DeletePartialView", "Movie")/' + id,
                        type: 'GET',
                        success: function (response) {
                            $('#delete').html(response)
                            $('#delete-form').submit();
                            swal("Your data has been deleted!", {
                                icon: "success",
                            }).then(() => {
                                ;
                            });
                        },
                        error: function (error) {
                            swal("Error", {
                                icon: "warning",
                            });
                        }
                    });

                }
            });
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

@{
    var user = await _userManager.GetUserAsync(this.User);
    var hidden = true;
    if (user != null)
    {
        var roles = await _userManager.GetRolesAsync(user);
        hidden = !roles.Any(r => r == RoleName.Administrator);
    }
    _AdminSidebarService.SetActive("Movie", "Index", "Admin", hidden);
}

@section Sidebar
{
    @Html.Raw(_AdminSidebarService.renderHtml())
}
